#!/bin/bash

usage(){
    echo "usage: ./build.sh [-c|--clean-output] [-v|--verbose] [-o|--output path]"
    echo "parameters:"
    echo "  -v | --verbose                          Enable verbose build details from msbuild and gradle tasks"
    echo "  -s | --sharpie                          Regenerates objective sharpie autogenerated files, useful to spot API changes"
    echo "  -o | --output [path]                    Output path"
    echo "  -g | --gradle-version [version]         Version to use for gradle. If 'local', then the local install of gradle will be used"
    echo "  -h | --help                             Prints this message"
}

while [ "$1" != "" ]; do
    case $1 in
        -o | --output )         shift
                                output_path=$1
                                ;;
        -g | --gradle-version ) shift
                                gradle_version=$1
                                ;;
        -s | --sharpie )        sharpie=1
                                ;;
        -v | --verbose )        verbose=1
                                ;;
        -h | --help )           usage
                                exit
                                ;;
        * )                     echo
                                echo "### Wrong parameter: $1 ###"
                                echo
                                usage
                                exit 1
    esac
    shift
done

echo
echo "### INFORMATION ###"
echo

version=$(. ./version.sh)
echo "##vso[build.updatebuildnumber]$version"

# Static configuration
nuget_project_folder="Laerdal.Dfu"
nuget_project_name="Laerdal.Dfu"
nuget_output_folder="$nuget_project_name.Output"
nuget_source_folder="$nuget_project_name.Source"
nuget_csproj_path="$nuget_project_folder/$nuget_project_name.csproj"
nuget_jars_folder="$nuget_project_folder/Droid/Jars"
nuget_frameworks_folder="$nuget_project_folder/iOS/Frameworks"
nuget_sharpie_folder="$nuget_project_folder/iOS/ObjcBinding/Sharpie_Generated"

# Generates variables
echo "version = $version"
echo "nuget_project_folder = $nuget_project_folder"
echo "nuget_jars_folder = $nuget_jars_folder"
echo "nuget_frameworks_folder = $nuget_frameworks_folder"
echo "nuget_output_folder = $nuget_output_folder"
echo "nuget_project_name = $nuget_project_name"
echo "nuget_csproj_path = $nuget_csproj_path"
echo "nuget_sharpie_folder = $nuget_sharpie_folder"

# Generates native files
( cd $nuget_source_folder && . ./download.ios.carthage.sh -o ../$nuget_frameworks_folder )
( cd $nuget_source_folder && . ./download.android.maven.sh -o ../$nuget_jars_folder )

echo
ios_lib_version=$(cat $nuget_frameworks_folder/version.txt)
echo "ios_lib_version = $ios_lib_version"
android_lib_version=$(cat $nuget_jars_folder/version.txt)
echo "android_lib_version = $android_lib_version"


if [ "$sharpie" = "1" ]; then
    echo
    echo "### SHARPIE ###"
    echo

    sharpie_version=$(sharpie -v)
    echo "sharpie_version = $sharpie_version"

    sharpie bind -sdk iphoneos -o $nuget_sharpie_folder --namespace=Laerdal.Dfu.iOS -f $nuget_frameworks_folder/iOSDFULibrary.framework
fi


echo ""
echo "### MSBUILD ###"
echo ""

msbuild_parameters=""
if [ ! "$verbose" = "1" ]; then
    msbuild_parameters="${msbuild_parameters} -nologo -verbosity:quiet"
fi
#msbuild_parameters="${msbuild_parameters} -t:Rebuild"
msbuild_parameters="${msbuild_parameters} -restore:True"
msbuild_parameters="${msbuild_parameters} -p:Configuration=Release"
msbuild_parameters="${msbuild_parameters} -p:PackageVersion=$version"
msbuild_parameters="${msbuild_parameters} -p:PackageDescription=\"Xamarin wrapper around Nordic.Dfu for iOS (NordicSemiconductor:IOS-Pods-DFU-Library:$ios_lib_version) and Android (no.nordicsemi.android:dfu:$android_lib_version:aar).\""

echo "msbuild_parameters = $msbuild_parameters"
echo ""

rm -rf $nuget_project_folder/bin
rm -rf $nuget_project_folder/obj
msbuild $nuget_csproj_path $msbuild_parameters

if [ ! -z "$output_path" ]; then

    echo
    echo "### COPY FILES TO OUTPUT ###"
    echo

    mkdir -p $output_path
    cp -a $nuget_output_folder/. $output_path

    echo "Copied into $output_path"
fi
