<Project Sdk="MSBuild.Sdk.Extras/2.0.54">

    <Import Project="GitVersion.targets" />

    <!-- SHARED -->
    <PropertyGroup>
        <TargetFrameworks>netstandard2.0;monoandroid10.0;xamarin.ios10</TargetFrameworks>
        <LangVersion>latest</LangVersion>
        <DebugSymbols>true</DebugSymbols>
        <OutputPath>bin\</OutputPath>
        <OutputType>Library</OutputType>
        <EnableDefaultCompileItems>false</EnableDefaultCompileItems>
    </PropertyGroup>

    <PropertyGroup>
        <RootNamespace>Laerdal.Xamarin.Dfu</RootNamespace>

        <PackageId>Laerdal.Xamarin.Dfu</PackageId>
        <PackageTags>Xamarin;Dfu</PackageTags>
        <PackageDescription>Xamarin wrapper around Nordic.Dfu for iOS and Android.</PackageDescription>
        <PackageProjectUrl>https://github.com/Laerdal/Laerdal.Xamarin.Dfu</PackageProjectUrl>
        <PackageVersion>1.0.0</PackageVersion>
        <PackageOutputPath>../$(RootNamespace).Output</PackageOutputPath>
        <!-- <PackageIcon>icon.png</PackageIcon> -->
        <PackageLicenseFile>LICENSE</PackageLicenseFile>

        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>
        <!-- sourcelink: Include PDB in the built .nupkg -->
        <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>

        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>Laerdal.Xamarin.Dfu</AssemblyName>

        <Title>Laerdal.Xamarin.Dfu</Title>
        <Summary>Xamarin Dfu</Summary>
        <Description>Xamarin wrapper around Nordic.Dfu for iOS and Android</Description>
        <Authors>François Raminosona, Laerdal</Authors>
        <Owners>François Raminosona, Laerdal</Owners>
        <Copyright>François Raminosona, Laerdal</Copyright>
        <RepositoryUrl>https://github.com/Laerdal/Laerdal.Xamarin.Dfu.git</RepositoryUrl>
        <RepositoryBranch>$(GitVersion_BranchName)</RepositoryBranch>
        <RepositoryCommit>$(GitVersion_Sha)</RepositoryCommit>
        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        <RepositoryType>git</RepositoryType>

        <IncludeSource>True</IncludeSource>
        <IncludeSymbols>True</IncludeSymbols>

        <!-- see : https://cezarypiatek.github.io/post/managing-output-in-sdk-projects/ -->
        <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
        <!-- sourcelink: Embed source files that are not tracked by the source control manager to the PDB -->
        <EmbedUntrackedSources>true</EmbedUntrackedSources>
        <!-- warning MSB9004: ManifestResourceWithNoCulture item type is deprecated. Emit EmbeddedResource items instead, with metadata WithCulture='false', Type='Resx', and optional LogicalName. -->
        <MSBuildWarningsAsMessages>$(MSBuildWarningsAsMessages);MSB9004</MSBuildWarningsAsMessages>
        <!-- WARN : SecureDFUServiceInitiator.g.cs: [CS0114] 'SecureDFUServiceInitiator.StartWithTargetWithIdentifier(NSUuid)' hides inherited member 
        'DFUServiceInitiator.StartWithTargetWithIdentifier(NSUuid)'. To make the current member override that implementation, add the override keyword. 
        Otherwise add the new keyword.
        Can be ignored. -->
        <NoWarn>CS0114</NoWarn>
    </PropertyGroup>
    
    <ItemGroup>
        <!-- <None Include="../icon.png" Pack="true" PackagePath="\" /> -->
        <None Include="../LICENSE" Pack="true" PackagePath="\" />
    </ItemGroup>

    <!-- SHARED -->
    <ItemGroup>
        <Compile Include="Shared\**\*.cs" />
        <Compile Include="Properties\AssemblyInfo.cs" />
    </ItemGroup>
    
    <!-- NETSTANDARD -->
    <PropertyGroup Condition=" $(TargetFramework.ToLower().StartsWith('netstandard')) ">
    </PropertyGroup>
    <ItemGroup Condition=" $(TargetFramework.ToLower().StartsWith('netstandard')) ">
        <Compile Include="NetStandard\*.cs" />
    </ItemGroup>

    <!-- ANDROID -->
    <PropertyGroup Condition=" $(TargetFramework.ToLower().StartsWith('monoandroid')) ">
        <IsBindingProject>true</IsBindingProject>
        <TargetFrameworkVersion>v10.0</TargetFrameworkVersion>
        <AndroidClassParser>class-parse</AndroidClassParser>
        <AndroidCodegenTarget>XAJavaInterop1</AndroidCodegenTarget>
        <DebugType>pdbonly</DebugType>
        <DefineConstants>TRACE</DefineConstants>
    </PropertyGroup>
    <ItemGroup Condition=" $(TargetFramework.ToLower().StartsWith('monoandroid')) ">
        <Reference Include="Mono.Android" />
        <Compile Include="Droid\*.cs" />
        <Compile Include="Droid\Specific\*.cs" />
        <EmbeddedReferenceJar Include="Droid\Jars\*.jar" />
        <LibraryProjectZip Include="Droid\Jars\*.aar" />
        <TransformFile Include="Droid\Transforms\*.xml" />
    </ItemGroup>

    <!-- IOS -->
    <PropertyGroup Condition=" $(TargetFramework.ToLower().StartsWith('xamarin.ios')) ">
        <IsBindingProject>true</IsBindingProject>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <MtouchExtraArgs>-v -v -v -v</MtouchExtraArgs>
    </PropertyGroup>
    <ItemGroup Condition=" $(TargetFramework.ToLower().StartsWith('xamarin.ios')) ">
        <Reference Include="Xamarin.iOS" />
        <Reference Include="netstandard" />
        <Compile Include="iOS\*.cs" />
        <Compile Include="iOS\Specific\*.cs" />
        <ObjcBindingCoreSource Include="iOS\ObjcBinding\Structs.cs" />
        <ObjcBindingApiDefinition Include="iOS\ObjcBinding\ApiDefinition.cs" />
        <PackageReference Include="Xamarin.iOS.SwiftRuntimeSupport" Version="0.2.0" />
    </ItemGroup>
    
    <ItemGroup Condition=" $(TargetFramework.ToLower().StartsWith('xamarin.ios')) ">
        <!-- Frameworks\iOSDFULibrary.framework -->
        <None Include="Frameworks\iOSDFULibrary.framework\iOSDFULibrary" Condition="Exists('Frameworks\iOSDFULibrary.framework')">
            <Link>Frameworks\iOSDFULibrary.framework</Link>
        </None>

        <NativeReference Include="Frameworks\iOSDFULibrary.framework" Condition="Exists('Frameworks\iOSDFULibrary.framework')">
            <Kind>Framework</Kind>
            <Frameworks>Foundation</Frameworks>
        </NativeReference>

        <!-- Frameworks\ZIPFoundation.framework -->
        <None Include="Frameworks\ZIPFoundation.framework\ZIPFoundation" Condition="Exists('Frameworks\ZIPFoundation.framework')">
            <Link>Frameworks\ZIPFoundation.framework</Link>
        </None>

        <NativeReference Include="Frameworks\ZIPFoundation.framework" Condition="Exists('Frameworks\ZIPFoundation.framework')">
            <Kind>Framework</Kind>
            <Frameworks>Foundation</Frameworks>
        </NativeReference>
    </ItemGroup>
</Project>